{"ast":null,"code":"export async function signup(body) {\n  try {\n    const res = await fetch('/api/auth/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    const text = await res.text();\n    // try parse json, but handle non-json (proxy/html) responses gracefully\n    try {\n      const data = text ? JSON.parse(text) : {};\n      if (res.ok) {\n        // make sure common fields are present for the UI\n        return data;\n      }\n      return {\n        error: data && (data.error || data.message) ? data.error || data.message : JSON.stringify(data),\n        status: res.status\n      };\n    } catch (e) {\n      return {\n        error: text || `HTTP ${res.status}`,\n        status: res.status\n      };\n    }\n  } catch (err) {\n    return {\n      error: err && err.message ? err.message : String(err)\n    };\n  }\n}\nexport async function signin(body) {\n  try {\n    const res = await fetch('/api/auth/signin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    const text = await res.text();\n    try {\n      const data = text ? JSON.parse(text) : {};\n      if (res.ok) return data;\n      return {\n        error: data && (data.error || data.message) ? data.error || data.message : JSON.stringify(data),\n        status: res.status\n      };\n    } catch (e) {\n      return {\n        error: text || `HTTP ${res.status}`,\n        status: res.status\n      };\n    }\n  } catch (err) {\n    return {\n      error: err && err.message ? err.message : String(err)\n    };\n  }\n}\nexport async function me(token) {\n  try {\n    const res = await fetch('/api/auth/me', {\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    });\n    const text = await res.text();\n    try {\n      const data = text ? JSON.parse(text) : {};\n      if (res.ok) return data;\n      return {\n        error: data && (data.error || data.message) ? data.error || data.message : JSON.stringify(data),\n        status: res.status\n      };\n    } catch (e) {\n      return {\n        error: text || `HTTP ${res.status}`,\n        status: res.status\n      };\n    }\n  } catch (err) {\n    return {\n      error: err && err.message ? err.message : String(err)\n    };\n  }\n}","map":{"version":3,"names":["signup","body","res","fetch","method","headers","JSON","stringify","text","data","parse","ok","error","message","status","e","err","String","signin","me","token"],"sources":["C:/Users/vaish/OneDrive/Desktop/splunk-lite-sqlite-fts/frontend/src/api/auth.js"],"sourcesContent":["  export async function signup(body){\r\n  try{\r\n    const res = await fetch('/api/auth/signup', {method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(body)});\r\n    const text = await res.text();\r\n    // try parse json, but handle non-json (proxy/html) responses gracefully\r\n    try{\r\n      const data = text ? JSON.parse(text) : {};\r\n      if (res.ok) {\r\n        // make sure common fields are present for the UI\r\n        return data;\r\n      }\r\n      return { error: data && (data.error || data.message) ? (data.error || data.message) : JSON.stringify(data), status: res.status };\r\n    }catch(e){\r\n      return { error: text || `HTTP ${res.status}`, status: res.status };\r\n    }\r\n  }catch(err){\r\n    return { error: err && err.message ? err.message : String(err) };\r\n  }\r\n}\r\n\r\nexport async function signin(body){\r\n  try{\r\n    const res = await fetch('/api/auth/signin', {method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(body)});\r\n    const text = await res.text();\r\n    try{\r\n      const data = text ? JSON.parse(text) : {};\r\n      if (res.ok) return data;\r\n      return { error: data && (data.error || data.message) ? (data.error || data.message) : JSON.stringify(data), status: res.status };\r\n    }catch(e){\r\n      return { error: text || `HTTP ${res.status}`, status: res.status };\r\n    }\r\n  }catch(err){\r\n    return { error: err && err.message ? err.message : String(err) };\r\n  }\r\n}\r\n\r\nexport async function me(token){\r\n  try{\r\n    const res = await fetch('/api/auth/me', {headers:{'Authorization': 'Bearer '+token}});\r\n    const text = await res.text();\r\n    try{\r\n      const data = text ? JSON.parse(text) : {};\r\n      if (res.ok) return data;\r\n      return { error: data && (data.error || data.message) ? (data.error || data.message) : JSON.stringify(data), status: res.status };\r\n    }catch(e){\r\n      return { error: text || `HTTP ${res.status}`, status: res.status };\r\n    }\r\n  }catch(err){\r\n    return { error: err && err.message ? err.message : String(err) };\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}